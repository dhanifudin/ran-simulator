(self.webpackChunksdran_simulator_docs=self.webpackChunksdran_simulator_docs||[]).push([[179],{3623:(n,e,t)=>{"use strict";t.r(e),t.d(e,{backgrounds:()=>u,default:()=>k,fragmentSteps:()=>m,fusumaProps:()=>p,slides:()=>i});var l=t(7401),a=t(9332),o=t(108),r=t(6465);t(4780),t(6066),t(5905),t(8602),t(4819),t(8574);function s(){return s=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(n[l]=t[l])}return n},s.apply(this,arguments)}const i=[n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h1",null,"O-RAN Simulation"),(0,a.kt)("h2",null,"Using SD-RAN (onosproject)"),(0,a.kt)("div",{className:"grid"},(0,a.kt)("a",{href:"https://github.com/dhanifudin",className:"account account-github","aria-label":"account-github"},(0,a.kt)(r.hJX,null)),(0,a.kt)("p",null,"Dian Hanifudin Subhi"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h1",null,"Outline"),(0,a.kt)("h2",null,"SD-RAN µONOS by onosproject"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Basic"),(0,a.kt)("li",{parentName:"ul"},"Installation"),(0,a.kt)("li",{parentName:"ul"},"Running Simulation"),(0,a.kt)("li",{parentName:"ul"},"Developing App"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Basic of Docker"),(0,a.kt)("p",null,"Docker is an open platform for developing, shipping, and running applications.")),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Docker Architecture"),(0,a.kt)("p",null,(0,a.kt)("img",{src:"https://docs.docker.com/engine/images/architecture.svg",alt:"Docker Architecture"}),"\nfrom ",(0,a.kt)("a",{parentName:"p",href:"https://docs.docker.com"},"https://docs.docker.com"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Docker Architecture (cont..)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Docker Daemon")," (dockerd): daemon listens for Docker API requests and manages\nDocker objects."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Docker Client"),": the primary way of users to interact with Docker."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Docker Desktop"),": Application for Mac, Windows or Linux environment to make it easier\nto manage Docker and also Kubernetes."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Docker Registries"),": registry to store Docker images. Example: Docker Hub"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Docker Objects"),": images, containers, networks, volumes, plugins and other\nobjects."))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Virtualization vs Container"),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(9508),alt:"VM vs Container"}))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Dockerfile"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Dockerfile"},'# SPDX-FileCopyrightText: 2019-present Open Networking Foundation <info@opennetworking.org>\n#\n# SPDX-License-Identifier: Apache-2.0\n\nARG ONOS_BUILD_VERSION=undefined\n\nFROM onosproject/golang-build:v1.0 as build\n\nENV GO111MODULE=on\nARG ONOS_MAKE_TARGET=build\n\nCOPY Makefile go.mod go.sum /go/src/github.com/onosproject/onos-kpimon/\nCOPY cmd/ /go/src/github.com/onosproject/onos-kpimon/cmd/\nCOPY pkg/ /go/src/github.com/onosproject/onos-kpimon/pkg/\nCOPY vendor/ /go/src/github.com/onosproject/onos-kpimon/vendor/\nCOPY api/ /go/src/github.com/onosproject/onos-kpimon/api\nCOPY build/build-tools /go/src/github.com/onosproject/onos-kpimon/build/build-tools\n\nRUN cd /go/src/github.com/onosproject/onos-kpimon && GOFLAGS=-mod=vendor make ${ONOS_MAKE_TARGET}\n\nFROM alpine:3.11\nRUN apk add libc6-compat\n\nUSER nobody\n\nCOPY --from=build /go/src/github.com/onosproject/onos-kpimon/build/_output/onos-kpimon /usr/local/bin/onos-kpimon\n\nENTRYPOINT ["onos-kpimon"]\n'))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Docker Command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# pull image from registy to local\ndocker pull ubuntu\n# run docker from image\ndocker run -it -d ubuntu\n# list running containers\ndocker ps\n# login into registry\ndocker login\n# build image based on Dockerfile\ndocker build .\n# push image from local to registry\ndocker push dhanifudin/app\n\n"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Basic of Kubernetes"),(0,a.kt)("p",null,"Kubernetes, also known as K8s, is an open-source system for automating\ndeployment, scaling, and management of containerized applications. Interaction\nagainst Kubernetes cluster using ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl"),".")),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Kubernetes Architecture"),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(1177),alt:"Component of Kubernetes"}))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Namespace"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Namespace provides mechanism for isolating groups of resources."),(0,a.kt)("li",{parentName:"ul"},"Create namespace using ",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl")," command ",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl create name-of-namespace")),(0,a.kt)("li",{parentName:"ul"},"Get all namespace in Kubernetes ",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl get namespace")))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Cluster"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Kubernetes cluster is a set of nodes that run containerized applications."),(0,a.kt)("li",{parentName:"ul"},"Node may be virtual or physical machine"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Pod"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Pod is a group of one or more containers"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Basic of Helm"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Helm")," is a package manager. Similar with package manager for other platforms like\n",(0,a.kt)("strong",{parentName:"p"},"apt"),", ",(0,a.kt)("strong",{parentName:"p"},"yum")," or ",(0,a.kt)("strong",{parentName:"p"},"homebrew"),". ",(0,a.kt)("strong",{parentName:"p"},"Helm")," helps you manage Kubernetes applications.")),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Helm Chart"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Helm uses a packaging format called charts."),(0,a.kt)("li",{parentName:"ul"},"Structure of helm chart")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sd-ran\n├── Chart.lock   # Lock file\n├── Chart.yaml   # A YAML file containing information about the chart\n├── README.md    # Optional: A human readable README file\n├── charts/      # A directory containing any charts upon which this chart depends.\n├── files/       # Additional files to support application\n├── templates/   # A directory of templates that when combined with value,\n|                # will generate valid Kubernetes manifest files.\n└── values.yaml  # The default configuration value for this chart\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://helm.sh/docs/topics/charts/"},"More Info"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Helm Basic Command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Add helm repositories\nhelm repo add name https://chart.url\n# Update helm repositories\nhelm repo update\n# Helm install\nhelm -n namespace install name repo-name/name-of-package\nhelm -n namespace install name location-chart-directory\n# Helm uninstall\nhelm -n namespace uninstall name\n"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Basic of Go Language"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Go is an open source programming language supported by Google"),(0,a.kt)("li",{parentName:"ul"},"Easy to learn and get started with (less keyword, OOP without class)"),(0,a.kt)("li",{parentName:"ul"},"Built-in concurrency and a robust standard library (using goroutine and channel)"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Basic Structure of Go"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\nfunc main() {\n    hello := Hello{language: "Korean"}\n    hello.sayHello()\n}\n\ntype Hello struct {\n    language string\n}\n\nfunc (h Hello) sayHello() {\n    if h.language == "Korean" {\n        fmt.Println("Hello, 세계")\n    } else {\n        fmt.Println("Hello, World")\n    }\n}\n')),(0,a.kt)(o.n,{id:.22841425897953482},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Hello, 세계\n")))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Manage Version and Dependency in Golang"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Find specific version then install manually ",(0,a.kt)("a",{parentName:"li",href:"https://go.dev/doc/manage-install"},"docs")),(0,a.kt)("li",{parentName:"ul"},"Go Version Manager tools (gvm, asdf)"),(0,a.kt)("li",{parentName:"ul"},"Manage dependency with ",(0,a.kt)("inlineCode",{parentName:"li"},"go mod")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"go get")))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Basic of gRPC"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"gRPC is a modern open source high performance Remote Procedure Call (RPC)."),(0,a.kt)("li",{parentName:"ul"},"gRPC uses Protocol Buffers (protobuf) to serializing data."))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Basic of gRPC"),(0,a.kt)("div",{className:"grid"},(0,a.kt)("div",{className:"column"},(0,a.kt)("p",null,(0,a.kt)("img",{src:"https://grpc.io/img/landing-2.svg",alt:"gRPC"}))),(0,a.kt)("div",{className:"column"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto"},"// The greeter service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}\n"))))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Basic of REST API"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"REST is an acronym for ",(0,a.kt)("strong",{parentName:"li"},"RE"),"presentational ",(0,a.kt)("strong",{parentName:"li"},"S"),"tate ",(0,a.kt)("strong",{parentName:"li"},"T"),"ransfer"),(0,a.kt)("li",{parentName:"ul"},"Architectural style for API that uses HTTP requests to access and use data."),(0,a.kt)("li",{parentName:"ul"},"HTTP request: GET, PUT, POST and DELETE"),(0,a.kt)("li",{parentName:"ul"},"Response in JSON (most common) or XML"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Installation µONOS")),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Installation"),(0,a.kt)("p",null,"Prerequisites Installation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Docker")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Kubernetes")," Cluster or ",(0,a.kt)("strong",{parentName:"li"},"k3s"),", ",(0,a.kt)("strong",{parentName:"li"},"k3d"),", ",(0,a.kt)("strong",{parentName:"li"},"kind")," or ",(0,a.kt)("strong",{parentName:"li"},"microk8s")," for single node"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Helm")," version 3"),(0,a.kt)("li",{parentName:"ul"},"Ubuntu 18.04/20.04 (Optional: SDRAN-in-a-Box method Installation)"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Installation"),(0,a.kt)("p",null,"Add Helm Repositories"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Add repo cord, atomix and onos\nhelm repo add cord https://charts.opencord.org\nhelm repo add atomix https://charts.atomix.io\nhelm repo add onos https://charts.onosproject.org\n# Optional or git clone sdran-helm-charts\n# git clone https://github.com/onosproject/sdran-helm-charts\nhelm repo add sdran https://sdrancharts.onosproject.org\nhelm repo update\n"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Installation"),(0,a.kt)("p",null,"Install components in kube-system namespace"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"helm install atomix-controller atomix/atomix-controller -n kube-system --wait --version 0.6.9\nhelm install atomix-raft-storage atomix/atomix-raft-storage -n kube-system --wait --version 0.1.25\nhelm install onos-operator onos/onos-operator -n kube-system --wait --version 0.5.2\n"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Installation"),(0,a.kt)("p",null,"Prepare Kubernetes Namespace"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# create sdran namespace\nkubectl create namespace sdran\n"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Installation"),(0,a.kt)("p",null,"Install sd-ran components"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/onosproject/sdran-helm-charts\ncd sdran-helm-charts\n\n# helm -n namespace install release-name helm-charts-dir\nhelm -n sdran install sd-ran sd-ran\n# or install without clone helm charts\nhelm -n sdran install sd-ran sdran/sd-ran\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"If there are errors related with dependency, please run ",(0,a.kt)("inlineCode",{parentName:"p"},"helm dependency build sd-ran"),"\nthen run helm install again."))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Installation"),(0,a.kt)("p",null,"Monitor the installation of sd-ran components"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl -n sdran get pods\n\nNAME                           READY   STATUS    RESTARTS   AGE\nonos-a1t-5b6cdf4c7c-qg77s      2/2     Running   0          4m17s\nonos-cli-89b47d4b7-npw6h       1/1     Running   0          4m17s\nonos-config-76f8b49887-qt8lg   4/4     Running   0          4m17s\nonos-consensus-store-0         1/1     Running   0          4m17s\nonos-e2t-57ccb4b454-wb5gn      3/3     Running   0          4m17s\nonos-topo-d66795968-qp6p4      3/3     Running   0          4m17s\nonos-uenib-67d864bc76-55h2l    3/3     Running   0          4m17s\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Tips"),":\nWe can combine command with ",(0,a.kt)("inlineCode",{parentName:"p"},"watch")," to update output periodically\n",(0,a.kt)("inlineCode",{parentName:"p"},"watch kubectl -n sdran get pods")))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Installation"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"TLDR;")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://bit.ly/install-ran-simulator"},"https://bit.ly/install-ran-simulator"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("p",null,"Load model and start simulation when install ran-simulator component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Run inside sdran-helm-charts\nhelm -n sdran install ran-simulator ran-simulator\n# Or\nhelm -n sdran install ran-simulator sdran/ran-simulator\n")),(0,a.kt)("p",null,"Unload model with helm uninstall (replace with new model)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"helm -n sdran uninstall ran-simulator\n"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Interaction with simulator via onos-cli. onos-cli is Command-line interface for\nONOS (µONOS Architecture)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Attach into onos-cli pod using kubectl command\nkubectl -n sdran exec -it $(kubectl -n sdran get pods -l type=cli -o name) -- /bin/sh\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Inside the onos-cli pod, we can interact with simulator using ",(0,a.kt)("inlineCode",{parentName:"li"},"onos ransim"),"\nsubcommand. To see available supported command please type help.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"onos ransim\n# To see available supported command, please type help\nonos ransim help\n"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("p",null,"Example Usage of onos cli"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Get the deployed nodes\n",(0,a.kt)("img",{src:t(1447),alt:"Get Nodes"})))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("p",null,"Example Usage of onos cli"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Get routes of 100 UEs that generated by simulator\n",(0,a.kt)("img",{src:t(4905),alt:"Get Routes"})))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("p",null,"Customize model of simulator"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Navigate inside sdran-helm-charts cloned repository\ncd sdran-helm-charts\n# Put custom-model.yaml inside ran-simulator/files/model\n# Modify model by editing ran-simulator/values.yaml file\nvim ran-simulator/values.yaml\n# Find modelName then replace with the desired model (without yaml ext)\n# Load new model by run helm install\nhelm -n sdran install ran-simulator ran-simulator\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/onosproject/sdran-helm-charts/blob/29ffaaf6e5400ebe8b5f7be68a882158e7aed856/ran-simulator/values.yaml#L38"},"ran-simulator/values.yaml"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("p",null,"Predefined Models"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ran-simulator/files/model\n├── model-5cell-100ue.yaml\n├── model-7cell-140ue.yaml\n├── model.yaml\n├── scale-50-150.yaml\n├── scale-model.yaml\n├── three-cell-model.yaml\n├── three-cell-n-node-model.yaml\n└── two-cell-two-node-model.yaml\n"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("p",null,"Honeycomb Topology Generator. ",(0,a.kt)("a",{parentName:"p",href:"https://docs.sd-ran.org/master/ran-simulator/docs/topology_generator.html"},"Honeycomb Topology Generator Docs")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Prerequisites: Golang >= 1.16"),(0,a.kt)("li",{parentName:"ul"},"Installation Steps",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/onosproject/ran-simulator.git\n# Navigate into the ran-simulator project directory\ngo mod download\n# Run tool\ngo run cmd/honeycomb/honecomb.go topo --towers 3 output_model.yaml\n"))))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'layout:\n  center:\n    lat: 52.52\n    lng: 13.405\n  zoom: 0\n  locationsscale: 1.25\n  fademap: false\n  showroutes: false\n  showpower: false\nrouteEndPoints: []\nwayPointRoute: false\ndirectRoute: false\nnodes:\n  node1:\n    gnbid: 20819\n    controllers:\n    - e2t-1\n    servicemodels:\n    - mho\n    - kpm\n    - rcpre2\n    - kpm2\n    cells:\n    - 222084856477433857\n    - 222084856477433858\n    - 222084856477433859\n    status: stopped\n  node2:\n    gnbid: 20820\n    controllers:\n    - e2t-1\n    servicemodels:\n    - mho\n    - kpm\n    - rcpre2\n    - kpm2\n    cells:\n    - 222084856477450241\n    - 222084856477450242\n    - 222084856477450243\n    status: stopped\ncells:\n  cell1:\n    ncgi: 222084856477433857\n    sector:\n      center:\n        lat: 52.486405366824926\n        lng: 13.412233915182187\n      azimuth: 0\n      arc: 120\n      tilt: 1\n      height: 43\n    color: green\n    maxues: 99999\n    neighbors:\n    - 222084856477433858\n    - 222084856477433859\n    - 222084856477450241\n    txpowerdb: 11\n    measurementparams:\n      timetotrigger: 0\n      frequencyoffset: 0\n      pcellindividualoffset: 0\n      ncellindividualoffsets: {}\n      hysteresis: 0\n      eventa3params:\n        a3offset: 0\n        reportonleave: false\n    pci: 480\n    earfcn: 42\n    celltype: 3\n    rrcidlecount: 0\n    rrcconnectedcount: 0\n  cell2:\n    ncgi: 222084856477433858\n    sector:\n      center:\n        lat: 52.486405366824926\n        lng: 13.412233915182187\n      azimuth: 120\n      arc: 120\n      tilt: -10\n      height: 28\n    color: green\n    maxues: 99999\n    neighbors:\n    - 222084856477433857\n    - 222084856477433859\n    - 222084856477450242\n    txpowerdb: 11\n    measurementparams:\n      timetotrigger: 0\n      frequencyoffset: 0\n      pcellindividualoffset: 0\n      ncellindividualoffsets: {}\n      hysteresis: 0\n      eventa3params:\n        a3offset: 0\n        reportonleave: false\n    pci: 148\n    earfcn: 43\n    celltype: 2\n    rrcidlecount: 0\n    rrcconnectedcount: 0\n  cell3:\n    ncgi: 222084856477433859\n    sector:\n      center:\n        lat: 52.486405366824926\n        lng: 13.412233915182187\n      azimuth: 240\n      arc: 120\n      tilt: -10\n      height: 22\n    color: green\n    maxues: 99999\n    neighbors:\n    - 222084856477450243\n    - 222084856477433857\n    - 222084856477433858\n    txpowerdb: 11\n    measurementparams:\n      timetotrigger: 0\n      frequencyoffset: 0\n      pcellindividualoffset: 0\n      ncellindividualoffsets: {}\n      hysteresis: 0\n      eventa3params:\n        a3offset: 0\n        reportonleave: false\n    pci: 218\n    earfcn: 44\n    celltype: 3\n    rrcidlecount: 0\n    rrcconnectedcount: 0\n  cell4:\n    ncgi: 222084856477450241\n    sector:\n      center:\n        lat: 52.50431527434924\n        lng: 13.453261970488306\n      azimuth: 0\n      arc: 120\n      tilt: -15\n      height: 46\n    color: green\n    maxues: 99999\n    neighbors:\n    - 222084856477433857\n    - 222084856477450242\n    - 222084856477450243\n    txpowerdb: 11\n    measurementparams:\n      timetotrigger: 0\n      frequencyoffset: 0\n      pcellindividualoffset: 0\n      ncellindividualoffsets: {}\n      hysteresis: 0\n      eventa3params:\n        a3offset: 0\n        reportonleave: false\n    pci: 218\n    earfcn: 45\n    celltype: 0\n    rrcidlecount: 0\n    rrcconnectedcount: 0\n  cell5:\n    ncgi: 222084856477450242\n    sector:\n      center:\n        lat: 52.50431527434924\n        lng: 13.453261970488306\n      azimuth: 120\n      arc: 120\n      tilt: 10\n      height: 49\n    color: green\n    maxues: 99999\n    neighbors:\n    - 222084856477450243\n    - 222084856477433858\n    - 222084856477450241\n    txpowerdb: 11\n    measurementparams:\n      timetotrigger: 0\n      frequencyoffset: 0\n      pcellindividualoffset: 0\n      ncellindividualoffsets: {}\n      hysteresis: 0\n      eventa3params:\n        a3offset: 0\n        reportonleave: false\n    pci: 480\n    earfcn: 46\n    celltype: 2\n    rrcidlecount: 0\n    rrcconnectedcount: 0\n  cell6:\n    ncgi: 222084856477450243\n    sector:\n      center:\n        lat: 52.50431527434924\n        lng: 13.453261970488306\n      azimuth: 240\n      arc: 120\n      tilt: -6\n      height: 29\n    color: green\n    maxues: 99999\n    neighbors:\n    - 222084856477433859\n    - 222084856477450241\n    - 222084856477450242\n    txpowerdb: 11\n    measurementparams:\n      timetotrigger: 0\n      frequencyoffset: 0\n      pcellindividualoffset: 0\n      ncellindividualoffsets: {}\n      hysteresis: 0\n      eventa3params:\n        a3offset: 0\n        reportonleave: false\n    pci: 148\n    earfcn: 47\n    celltype: 2\n    rrcidlecount: 0\n    rrcconnectedcount: 0\ncontrollers:\n  e2t-1:\n    id: e2t-1\n    address: onos-e2t\n    port: 36421\nservicemodels:\n  kpm:\n    id: 1\n    description: kpm service model\n    version: 1.0.0\n  kpm2:\n    id: 4\n    description: kpm2 service model\n    version: 1.0.0\n  mho:\n    id: 5\n    description: mho service model\n    version: 1.0.0\n  rcpre2:\n    id: 3\n    description: rcpre2 service model\n    version: 1.0.0\nRrcStateChangesDisabled: false\ninitialRrcState: ""\nueCount: 0\nueCountPerCell: 15\nplmnID: "315010"\nplmnNumber: 3231760\napiKey: ""\nguami:\n  amfregionid: 0\n  amfsetid: 0\n  amfpointer: 0\n'))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("p",null,"Visualize using Grafana"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Run inside sdran-helm-charts cloned repository\nhelm -n sdran install onos-kpimon onos-kpimon\nhelm -n sdran install onos-pci onos-pci\n# Enable fluent-bit and prometheus-stack in onos-exporter/values.yaml\nhelm -n sdran install onos-exporter onos-exporter\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.sd-ran.org/master/onos-exporter/README.html"},"onos-exporter docs"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("p",null,"Visualize using Grafana"),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(5446),alt:"Grafana"})),(0,a.kt)("p",null,"UE will be connected to best cell services (depends on the configuration cell in\nmodel)."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note"),": Cell Id ncgi represented as hex int format in simulation. ",(0,a.kt)("strong",{parentName:"p"},"Example"),":\n",(0,a.kt)("strong",{parentName:"p"},"87893173159116801")," (model yaml) -> ",(0,a.kt)("strong",{parentName:"p"},"13842601454c001")," (grafana dashboard)"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Tips"),(0,a.kt)("ul",null,(0,a.kt)("li",null,"Enable kubectl autocompletion",(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://kubernetes.io/docs/tasks/tools/included/optional-kubectl-configs-bash-linux/"},"Bash completion")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://kubernetes.io/docs/tasks/tools/included/optional-kubectl-configs-zsh/"},"Zsh completion")))),(0,a.kt)("li",null,"Run terminal session using ",(0,a.kt)("code",null,"tmux")," or ",(0,a.kt)("code",null,"screen"),(0,a.kt)("ul",null,(0,a.kt)("li",null,"Prevent lost work"),(0,a.kt)("li",null,"Multiple pane terminal in one session"),(0,a.kt)("li",null,"Easy attach/detach the ssh session"))))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Video Demo"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://drive.google.com/file/d/1Rv4Jw19OWESdqR6aO9RLQirl9FlzsKNL/view"},"Video Demo"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h1",null,"Developing App")),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Developing App"),(0,a.kt)("p",null,"Application in O-RAN"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"rApp: not mentioned in SD-RAN onosproject documentation."),(0,a.kt)("li",{parentName:"ul"},"xApp: API & SDK available"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Developing xApp"),(0,a.kt)("p",null,"An xApp is a software tool used by RAN Intelligent Controller (RIC) to manage\nnetwork functions in near-real time."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-md"},"* Official available API & SDK to support xApp development\n  * onos-api: API definition protobuf\n  * onos-ric-sdk-go: E2, O1, A1 and Topo module\n  * onos-ric-sdk-py: E2 and SDL (Shared Data Layer) module\n\n* onos-ric-sdk-go\n  * onos-kpimon: KPI monitoring xApp\n  * onos-pci: Physical Cell Identity xAPP\n  * rimedo-ts: Traffic Steering xApp\n* onos-ric-sdk-py\n  * onos-ric-python-apps: ONOS RIC xApps authored in Python\n"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Developing xApp"),(0,a.kt)("p",null,"Overview of xApp Architecture"),(0,a.kt)("div",{className:"grid"},(0,a.kt)("div",{className:"column"},(0,a.kt)("p",null,(0,a.kt)("img",{src:t(7931),alt:"Onos KPI"}))),(0,a.kt)("div",{className:"column"},(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"onos-kpimon xApp create subscriptions through E2 interface"),(0,a.kt)("li",{parentName:"ul"},"Communication between southbound and northbound handled by broker"),(0,a.kt)("li",{parentName:"ul"},"Data of measurement metrics handled by store"),(0,a.kt)("li",{parentName:"ul"},"onos-exporter scrape KPI from northbound onos-kpimon"))))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Developing xApp"),(0,a.kt)("p",null,"Installing available xApp Examples"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"xApp installation can be done using helm command")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Run inside sdran-helm-charts cloned repository\nhelm -n sdran install onos-kpimon onos-kpimon\nhelm -n sdran install rimedo-ts rimedo-ts\n# Or using sdran repo\nhelm -n sdran install onos-kpimon sdran/onos-kpimon\nhelm -n sdran install rimedo-ts sdran/rimedo-ts\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Some xApp only compatible for specific requirements version of SD-RAN\ncomponents. There are two kind of versions in Helm chart, chart version and\napp version, be careful. Example: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/onosproject/rimedo-ts#requirements"},"rimedo-ts")))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Developing xApp"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Build project using ",(0,a.kt)("inlineCode",{parentName:"li"},"make")," command and ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/onosproject/build-tools"},"build-tools"),"."),(0,a.kt)("li",{parentName:"ul"},"Definition of target defined in Makefile file."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/onosproject/onos-kpimon/blob/master/Makefile"},"Makefile Example")))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Developing xApp"),(0,a.kt)("p",null,"Test Driven Development (TDD) support using ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/onosproject/helmit"},"helmit"),".")),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h2",null,"Developing xApp"),(0,a.kt)("p",null,"Challenge"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Intercept reverse port-forward component from cluster to local communication"),(0,a.kt)("li",{parentName:"ul"},"No many resource of tutorial"))),n=>(0,a.kt)(l.Fragment,null,(0,a.kt)("h1",null,"Thank You"))],u=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],m=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[.22841425897953482],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],p=[{classes:"title"},{sectionTitle:"Outline"},{sectionTitle:"Basic of Docker"},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{sectionTitle:"Installation"},{},{},{},{},{},{},{},{sectionTitle:"Running Simulation"},{},{},{},{},{},{},{},{},{},{},{sectionTitle:"Video Demo"},{sectionTitle:"Developing App"},{},{},{},{},{},{},{},{}],c={};function k(n){let{components:e,...l}=n;return(0,a.kt)("wrapper",s({},c,l,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",null,"O-RAN Simulation"),(0,a.kt)("h2",null,"Using SD-RAN (onosproject)"),(0,a.kt)("p",null,"Dian Hanifudin Subhi"),(0,a.kt)("hr",null),(0,a.kt)("h1",null,"Outline"),(0,a.kt)("h2",null,"SD-RAN µONOS by onosproject"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Basic"),(0,a.kt)("li",{parentName:"ul"},"Installation"),(0,a.kt)("li",{parentName:"ul"},"Running Simulation"),(0,a.kt)("li",{parentName:"ul"},"Developing App")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Basic of Docker"),(0,a.kt)("p",null,"Docker is an open platform for developing, shipping, and running applications."),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Docker Architecture"),(0,a.kt)("p",null,(0,a.kt)("img",{src:"https://docs.docker.com/engine/images/architecture.svg",alt:"Docker Architecture"}),"\nfrom ",(0,a.kt)("a",{parentName:"p",href:"https://docs.docker.com"},"https://docs.docker.com")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Docker Architecture (cont..)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Docker Daemon")," (dockerd): daemon listens for Docker API requests and manages\nDocker objects."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Docker Client"),": the primary way of users to interact with Docker."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Docker Desktop"),": Application for Mac, Windows or Linux environment to make it easier\nto manage Docker and also Kubernetes."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Docker Registries"),": registry to store Docker images. Example: Docker Hub"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Docker Objects"),": images, containers, networks, volumes, plugins and other\nobjects.")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Virtualization vs Container"),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(9508),alt:"VM vs Container"})),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Dockerfile"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Dockerfile"},'# SPDX-FileCopyrightText: 2019-present Open Networking Foundation <info@opennetworking.org>\n#\n# SPDX-License-Identifier: Apache-2.0\n\nARG ONOS_BUILD_VERSION=undefined\n\nFROM onosproject/golang-build:v1.0 as build\n\nENV GO111MODULE=on\nARG ONOS_MAKE_TARGET=build\n\nCOPY Makefile go.mod go.sum /go/src/github.com/onosproject/onos-kpimon/\nCOPY cmd/ /go/src/github.com/onosproject/onos-kpimon/cmd/\nCOPY pkg/ /go/src/github.com/onosproject/onos-kpimon/pkg/\nCOPY vendor/ /go/src/github.com/onosproject/onos-kpimon/vendor/\nCOPY api/ /go/src/github.com/onosproject/onos-kpimon/api\nCOPY build/build-tools /go/src/github.com/onosproject/onos-kpimon/build/build-tools\n\nRUN cd /go/src/github.com/onosproject/onos-kpimon && GOFLAGS=-mod=vendor make ${ONOS_MAKE_TARGET}\n\nFROM alpine:3.11\nRUN apk add libc6-compat\n\nUSER nobody\n\nCOPY --from=build /go/src/github.com/onosproject/onos-kpimon/build/_output/onos-kpimon /usr/local/bin/onos-kpimon\n\nENTRYPOINT ["onos-kpimon"]\n')),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Docker Command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# pull image from registy to local\ndocker pull ubuntu\n# run docker from image\ndocker run -it -d ubuntu\n# list running containers\ndocker ps\n# login into registry\ndocker login\n# build image based on Dockerfile\ndocker build .\n# push image from local to registry\ndocker push dhanifudin/app\n\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Basic of Kubernetes"),(0,a.kt)("p",null,"Kubernetes, also known as K8s, is an open-source system for automating\ndeployment, scaling, and management of containerized applications. Interaction\nagainst Kubernetes cluster using ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl"),"."),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Kubernetes Architecture"),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(1177),alt:"Component of Kubernetes"})),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Namespace"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Namespace provides mechanism for isolating groups of resources."),(0,a.kt)("li",{parentName:"ul"},"Create namespace using ",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl")," command ",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl create name-of-namespace")),(0,a.kt)("li",{parentName:"ul"},"Get all namespace in Kubernetes ",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl get namespace"))),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Cluster"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Kubernetes cluster is a set of nodes that run containerized applications."),(0,a.kt)("li",{parentName:"ul"},"Node may be virtual or physical machine")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Pod"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Pod is a group of one or more containers")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Basic of Helm"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Helm")," is a package manager. Similar with package manager for other platforms like\n",(0,a.kt)("strong",{parentName:"p"},"apt"),", ",(0,a.kt)("strong",{parentName:"p"},"yum")," or ",(0,a.kt)("strong",{parentName:"p"},"homebrew"),". ",(0,a.kt)("strong",{parentName:"p"},"Helm")," helps you manage Kubernetes applications."),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Helm Chart"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Helm uses a packaging format called charts."),(0,a.kt)("li",{parentName:"ul"},"Structure of helm chart")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sd-ran\n├── Chart.lock   # Lock file\n├── Chart.yaml   # A YAML file containing information about the chart\n├── README.md    # Optional: A human readable README file\n├── charts/      # A directory containing any charts upon which this chart depends.\n├── files/       # Additional files to support application\n├── templates/   # A directory of templates that when combined with value,\n|                # will generate valid Kubernetes manifest files.\n└── values.yaml  # The default configuration value for this chart\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://helm.sh/docs/topics/charts/"},"More Info")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Helm Basic Command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Add helm repositories\nhelm repo add name https://chart.url\n# Update helm repositories\nhelm repo update\n# Helm install\nhelm -n namespace install name repo-name/name-of-package\nhelm -n namespace install name location-chart-directory\n# Helm uninstall\nhelm -n namespace uninstall name\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Basic of Go Language"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Go is an open source programming language supported by Google"),(0,a.kt)("li",{parentName:"ul"},"Easy to learn and get started with (less keyword, OOP without class)"),(0,a.kt)("li",{parentName:"ul"},"Built-in concurrency and a robust standard library (using goroutine and channel)")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Basic Structure of Go"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\nfunc main() {\n    hello := Hello{language: "Korean"}\n    hello.sayHello()\n}\n\ntype Hello struct {\n    language string\n}\n\nfunc (h Hello) sayHello() {\n    if h.language == "Korean" {\n        fmt.Println("Hello, 세계")\n    } else {\n        fmt.Println("Hello, World")\n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Hello, 세계\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Manage Version and Dependency in Golang"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Find specific version then install manually ",(0,a.kt)("a",{parentName:"li",href:"https://go.dev/doc/manage-install"},"docs")),(0,a.kt)("li",{parentName:"ul"},"Go Version Manager tools (gvm, asdf)"),(0,a.kt)("li",{parentName:"ul"},"Manage dependency with ",(0,a.kt)("inlineCode",{parentName:"li"},"go mod")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"go get"))),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Basic of gRPC"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"gRPC is a modern open source high performance Remote Procedure Call (RPC)."),(0,a.kt)("li",{parentName:"ul"},"gRPC uses Protocol Buffers (protobuf) to serializing data.")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Basic of gRPC"),(0,a.kt)("p",null,(0,a.kt)("img",{src:"https://grpc.io/img/landing-2.svg",alt:"gRPC"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-proto"},"// The greeter service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Basic of REST API"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"REST is an acronym for ",(0,a.kt)("strong",{parentName:"li"},"RE"),"presentational ",(0,a.kt)("strong",{parentName:"li"},"S"),"tate ",(0,a.kt)("strong",{parentName:"li"},"T"),"ransfer"),(0,a.kt)("li",{parentName:"ul"},"Architectural style for API that uses HTTP requests to access and use data."),(0,a.kt)("li",{parentName:"ul"},"HTTP request: GET, PUT, POST and DELETE"),(0,a.kt)("li",{parentName:"ul"},"Response in JSON (most common) or XML")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Installation µONOS"),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Installation"),(0,a.kt)("p",null,"Prerequisites Installation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Docker")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Kubernetes")," Cluster or ",(0,a.kt)("strong",{parentName:"li"},"k3s"),", ",(0,a.kt)("strong",{parentName:"li"},"k3d"),", ",(0,a.kt)("strong",{parentName:"li"},"kind")," or ",(0,a.kt)("strong",{parentName:"li"},"microk8s")," for single node"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Helm")," version 3"),(0,a.kt)("li",{parentName:"ul"},"Ubuntu 18.04/20.04 (Optional: SDRAN-in-a-Box method Installation)")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Installation"),(0,a.kt)("p",null,"Add Helm Repositories"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Add repo cord, atomix and onos\nhelm repo add cord https://charts.opencord.org\nhelm repo add atomix https://charts.atomix.io\nhelm repo add onos https://charts.onosproject.org\n# Optional or git clone sdran-helm-charts\n# git clone https://github.com/onosproject/sdran-helm-charts\nhelm repo add sdran https://sdrancharts.onosproject.org\nhelm repo update\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Installation"),(0,a.kt)("p",null,"Install components in kube-system namespace"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"helm install atomix-controller atomix/atomix-controller -n kube-system --wait --version 0.6.9\nhelm install atomix-raft-storage atomix/atomix-raft-storage -n kube-system --wait --version 0.1.25\nhelm install onos-operator onos/onos-operator -n kube-system --wait --version 0.5.2\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Installation"),(0,a.kt)("p",null,"Prepare Kubernetes Namespace"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# create sdran namespace\nkubectl create namespace sdran\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Installation"),(0,a.kt)("p",null,"Install sd-ran components"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/onosproject/sdran-helm-charts\ncd sdran-helm-charts\n\n# helm -n namespace install release-name helm-charts-dir\nhelm -n sdran install sd-ran sd-ran\n# or install without clone helm charts\nhelm -n sdran install sd-ran sdran/sd-ran\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"If there are errors related with dependency, please run ",(0,a.kt)("inlineCode",{parentName:"p"},"helm dependency build sd-ran"),"\nthen run helm install again.")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Installation"),(0,a.kt)("p",null,"Monitor the installation of sd-ran components"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl -n sdran get pods\n\nNAME                           READY   STATUS    RESTARTS   AGE\nonos-a1t-5b6cdf4c7c-qg77s      2/2     Running   0          4m17s\nonos-cli-89b47d4b7-npw6h       1/1     Running   0          4m17s\nonos-config-76f8b49887-qt8lg   4/4     Running   0          4m17s\nonos-consensus-store-0         1/1     Running   0          4m17s\nonos-e2t-57ccb4b454-wb5gn      3/3     Running   0          4m17s\nonos-topo-d66795968-qp6p4      3/3     Running   0          4m17s\nonos-uenib-67d864bc76-55h2l    3/3     Running   0          4m17s\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Tips"),":\nWe can combine command with ",(0,a.kt)("inlineCode",{parentName:"p"},"watch")," to update output periodically\n",(0,a.kt)("inlineCode",{parentName:"p"},"watch kubectl -n sdran get pods"))),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Installation"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"TLDR;")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://bit.ly/install-ran-simulator"},"https://bit.ly/install-ran-simulator")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("p",null,"Load model and start simulation when install ran-simulator component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Run inside sdran-helm-charts\nhelm -n sdran install ran-simulator ran-simulator\n# Or\nhelm -n sdran install ran-simulator sdran/ran-simulator\n")),(0,a.kt)("p",null,"Unload model with helm uninstall (replace with new model)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"helm -n sdran uninstall ran-simulator\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Interaction with simulator via onos-cli. onos-cli is Command-line interface for\nONOS (µONOS Architecture)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Attach into onos-cli pod using kubectl command\nkubectl -n sdran exec -it $(kubectl -n sdran get pods -l type=cli -o name) -- /bin/sh\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Inside the onos-cli pod, we can interact with simulator using ",(0,a.kt)("inlineCode",{parentName:"li"},"onos ransim"),"\nsubcommand. To see available supported command please type help.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"onos ransim\n# To see available supported command, please type help\nonos ransim help\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("p",null,"Example Usage of onos cli"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Get the deployed nodes\n",(0,a.kt)("img",{src:t(1447),alt:"Get Nodes"}))),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("p",null,"Example Usage of onos cli"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Get routes of 100 UEs that generated by simulator\n",(0,a.kt)("img",{src:t(4905),alt:"Get Routes"}))),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("p",null,"Customize model of simulator"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Navigate inside sdran-helm-charts cloned repository\ncd sdran-helm-charts\n# Put custom-model.yaml inside ran-simulator/files/model\n# Modify model by editing ran-simulator/values.yaml file\nvim ran-simulator/values.yaml\n# Find modelName then replace with the desired model (without yaml ext)\n# Load new model by run helm install\nhelm -n sdran install ran-simulator ran-simulator\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/onosproject/sdran-helm-charts/blob/29ffaaf6e5400ebe8b5f7be68a882158e7aed856/ran-simulator/values.yaml#L38"},"ran-simulator/values.yaml")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("p",null,"Predefined Models"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ran-simulator/files/model\n├── model-5cell-100ue.yaml\n├── model-7cell-140ue.yaml\n├── model.yaml\n├── scale-50-150.yaml\n├── scale-model.yaml\n├── three-cell-model.yaml\n├── three-cell-n-node-model.yaml\n└── two-cell-two-node-model.yaml\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("p",null,"Honeycomb Topology Generator. ",(0,a.kt)("a",{parentName:"p",href:"https://docs.sd-ran.org/master/ran-simulator/docs/topology_generator.html"},"Honeycomb Topology Generator Docs")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Prerequisites: Golang >= 1.16"),(0,a.kt)("li",{parentName:"ul"},"Installation Steps",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/onosproject/ran-simulator.git\n# Navigate into the ran-simulator project directory\ngo mod download\n# Run tool\ngo run cmd/honeycomb/honecomb.go topo --towers 3 output_model.yaml\n")))),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'layout:\n  center:\n    lat: 52.52\n    lng: 13.405\n  zoom: 0\n  locationsscale: 1.25\n  fademap: false\n  showroutes: false\n  showpower: false\nrouteEndPoints: []\nwayPointRoute: false\ndirectRoute: false\nnodes:\n  node1:\n    gnbid: 20819\n    controllers:\n    - e2t-1\n    servicemodels:\n    - mho\n    - kpm\n    - rcpre2\n    - kpm2\n    cells:\n    - 222084856477433857\n    - 222084856477433858\n    - 222084856477433859\n    status: stopped\n  node2:\n    gnbid: 20820\n    controllers:\n    - e2t-1\n    servicemodels:\n    - mho\n    - kpm\n    - rcpre2\n    - kpm2\n    cells:\n    - 222084856477450241\n    - 222084856477450242\n    - 222084856477450243\n    status: stopped\ncells:\n  cell1:\n    ncgi: 222084856477433857\n    sector:\n      center:\n        lat: 52.486405366824926\n        lng: 13.412233915182187\n      azimuth: 0\n      arc: 120\n      tilt: 1\n      height: 43\n    color: green\n    maxues: 99999\n    neighbors:\n    - 222084856477433858\n    - 222084856477433859\n    - 222084856477450241\n    txpowerdb: 11\n    measurementparams:\n      timetotrigger: 0\n      frequencyoffset: 0\n      pcellindividualoffset: 0\n      ncellindividualoffsets: {}\n      hysteresis: 0\n      eventa3params:\n        a3offset: 0\n        reportonleave: false\n    pci: 480\n    earfcn: 42\n    celltype: 3\n    rrcidlecount: 0\n    rrcconnectedcount: 0\n  cell2:\n    ncgi: 222084856477433858\n    sector:\n      center:\n        lat: 52.486405366824926\n        lng: 13.412233915182187\n      azimuth: 120\n      arc: 120\n      tilt: -10\n      height: 28\n    color: green\n    maxues: 99999\n    neighbors:\n    - 222084856477433857\n    - 222084856477433859\n    - 222084856477450242\n    txpowerdb: 11\n    measurementparams:\n      timetotrigger: 0\n      frequencyoffset: 0\n      pcellindividualoffset: 0\n      ncellindividualoffsets: {}\n      hysteresis: 0\n      eventa3params:\n        a3offset: 0\n        reportonleave: false\n    pci: 148\n    earfcn: 43\n    celltype: 2\n    rrcidlecount: 0\n    rrcconnectedcount: 0\n  cell3:\n    ncgi: 222084856477433859\n    sector:\n      center:\n        lat: 52.486405366824926\n        lng: 13.412233915182187\n      azimuth: 240\n      arc: 120\n      tilt: -10\n      height: 22\n    color: green\n    maxues: 99999\n    neighbors:\n    - 222084856477450243\n    - 222084856477433857\n    - 222084856477433858\n    txpowerdb: 11\n    measurementparams:\n      timetotrigger: 0\n      frequencyoffset: 0\n      pcellindividualoffset: 0\n      ncellindividualoffsets: {}\n      hysteresis: 0\n      eventa3params:\n        a3offset: 0\n        reportonleave: false\n    pci: 218\n    earfcn: 44\n    celltype: 3\n    rrcidlecount: 0\n    rrcconnectedcount: 0\n  cell4:\n    ncgi: 222084856477450241\n    sector:\n      center:\n        lat: 52.50431527434924\n        lng: 13.453261970488306\n      azimuth: 0\n      arc: 120\n      tilt: -15\n      height: 46\n    color: green\n    maxues: 99999\n    neighbors:\n    - 222084856477433857\n    - 222084856477450242\n    - 222084856477450243\n    txpowerdb: 11\n    measurementparams:\n      timetotrigger: 0\n      frequencyoffset: 0\n      pcellindividualoffset: 0\n      ncellindividualoffsets: {}\n      hysteresis: 0\n      eventa3params:\n        a3offset: 0\n        reportonleave: false\n    pci: 218\n    earfcn: 45\n    celltype: 0\n    rrcidlecount: 0\n    rrcconnectedcount: 0\n  cell5:\n    ncgi: 222084856477450242\n    sector:\n      center:\n        lat: 52.50431527434924\n        lng: 13.453261970488306\n      azimuth: 120\n      arc: 120\n      tilt: 10\n      height: 49\n    color: green\n    maxues: 99999\n    neighbors:\n    - 222084856477450243\n    - 222084856477433858\n    - 222084856477450241\n    txpowerdb: 11\n    measurementparams:\n      timetotrigger: 0\n      frequencyoffset: 0\n      pcellindividualoffset: 0\n      ncellindividualoffsets: {}\n      hysteresis: 0\n      eventa3params:\n        a3offset: 0\n        reportonleave: false\n    pci: 480\n    earfcn: 46\n    celltype: 2\n    rrcidlecount: 0\n    rrcconnectedcount: 0\n  cell6:\n    ncgi: 222084856477450243\n    sector:\n      center:\n        lat: 52.50431527434924\n        lng: 13.453261970488306\n      azimuth: 240\n      arc: 120\n      tilt: -6\n      height: 29\n    color: green\n    maxues: 99999\n    neighbors:\n    - 222084856477433859\n    - 222084856477450241\n    - 222084856477450242\n    txpowerdb: 11\n    measurementparams:\n      timetotrigger: 0\n      frequencyoffset: 0\n      pcellindividualoffset: 0\n      ncellindividualoffsets: {}\n      hysteresis: 0\n      eventa3params:\n        a3offset: 0\n        reportonleave: false\n    pci: 148\n    earfcn: 47\n    celltype: 2\n    rrcidlecount: 0\n    rrcconnectedcount: 0\ncontrollers:\n  e2t-1:\n    id: e2t-1\n    address: onos-e2t\n    port: 36421\nservicemodels:\n  kpm:\n    id: 1\n    description: kpm service model\n    version: 1.0.0\n  kpm2:\n    id: 4\n    description: kpm2 service model\n    version: 1.0.0\n  mho:\n    id: 5\n    description: mho service model\n    version: 1.0.0\n  rcpre2:\n    id: 3\n    description: rcpre2 service model\n    version: 1.0.0\nRrcStateChangesDisabled: false\ninitialRrcState: ""\nueCount: 0\nueCountPerCell: 15\nplmnID: "315010"\nplmnNumber: 3231760\napiKey: ""\nguami:\n  amfregionid: 0\n  amfsetid: 0\n  amfpointer: 0\n')),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("p",null,"Visualize using Grafana"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Run inside sdran-helm-charts cloned repository\nhelm -n sdran install onos-kpimon onos-kpimon\nhelm -n sdran install onos-pci onos-pci\n# Enable fluent-bit and prometheus-stack in onos-exporter/values.yaml\nhelm -n sdran install onos-exporter onos-exporter\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.sd-ran.org/master/onos-exporter/README.html"},"onos-exporter docs")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Running Simulation"),(0,a.kt)("p",null,"Visualize using Grafana"),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(5446),alt:"Grafana"})),(0,a.kt)("p",null,"UE will be connected to best cell services (depends on the configuration cell in\nmodel)."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note"),": Cell Id ncgi represented as hex int format in simulation. ",(0,a.kt)("strong",{parentName:"p"},"Example"),":\n",(0,a.kt)("strong",{parentName:"p"},"87893173159116801")," (model yaml) -> ",(0,a.kt)("strong",{parentName:"p"},"13842601454c001")," (grafana dashboard)")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Tips"),(0,a.kt)("ul",null,(0,a.kt)("li",null,"Enable kubectl autocompletion",(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://kubernetes.io/docs/tasks/tools/included/optional-kubectl-configs-bash-linux/"},"Bash completion")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://kubernetes.io/docs/tasks/tools/included/optional-kubectl-configs-zsh/"},"Zsh completion")))),(0,a.kt)("li",null,"Run terminal session using ",(0,a.kt)("code",null,"tmux")," or ",(0,a.kt)("code",null,"screen"),(0,a.kt)("ul",null,(0,a.kt)("li",null,"Prevent lost work"),(0,a.kt)("li",null,"Multiple pane terminal in one session"),(0,a.kt)("li",null,"Easy attach/detach the ssh session")))),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Video Demo"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://drive.google.com/file/d/1Rv4Jw19OWESdqR6aO9RLQirl9FlzsKNL/view"},"Video Demo")),(0,a.kt)("hr",null),(0,a.kt)("h1",null,"Developing App"),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Developing App"),(0,a.kt)("p",null,"Application in O-RAN"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"rApp: not mentioned in SD-RAN onosproject documentation."),(0,a.kt)("li",{parentName:"ul"},"xApp: API & SDK available")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Developing xApp"),(0,a.kt)("p",null,"An xApp is a software tool used by RAN Intelligent Controller (RIC) to manage\nnetwork functions in near-real time."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-md"},"* Official available API & SDK to support xApp development\n  * onos-api: API definition protobuf\n  * onos-ric-sdk-go: E2, O1, A1 and Topo module\n  * onos-ric-sdk-py: E2 and SDL (Shared Data Layer) module\n\n* onos-ric-sdk-go\n  * onos-kpimon: KPI monitoring xApp\n  * onos-pci: Physical Cell Identity xAPP\n  * rimedo-ts: Traffic Steering xApp\n* onos-ric-sdk-py\n  * onos-ric-python-apps: ONOS RIC xApps authored in Python\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Developing xApp"),(0,a.kt)("p",null,"Overview of xApp Architecture"),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(7931),alt:"Onos KPI"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"onos-kpimon xApp create subscriptions through E2 interface"),(0,a.kt)("li",{parentName:"ul"},"Communication between southbound and northbound handled by broker"),(0,a.kt)("li",{parentName:"ul"},"Data of measurement metrics handled by store"),(0,a.kt)("li",{parentName:"ul"},"onos-exporter scrape KPI from northbound onos-kpimon")),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Developing xApp"),(0,a.kt)("p",null,"Installing available xApp Examples"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"xApp installation can be done using helm command")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Run inside sdran-helm-charts cloned repository\nhelm -n sdran install onos-kpimon onos-kpimon\nhelm -n sdran install rimedo-ts rimedo-ts\n# Or using sdran repo\nhelm -n sdran install onos-kpimon sdran/onos-kpimon\nhelm -n sdran install rimedo-ts sdran/rimedo-ts\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Some xApp only compatible for specific requirements version of SD-RAN\ncomponents. There are two kind of versions in Helm chart, chart version and\napp version, be careful. Example: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/onosproject/rimedo-ts#requirements"},"rimedo-ts"))),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Developing xApp"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Build project using ",(0,a.kt)("inlineCode",{parentName:"li"},"make")," command and ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/onosproject/build-tools"},"build-tools"),"."),(0,a.kt)("li",{parentName:"ul"},"Definition of target defined in Makefile file."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/onosproject/onos-kpimon/blob/master/Makefile"},"Makefile Example"))),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Developing xApp"),(0,a.kt)("p",null,"Test Driven Development (TDD) support using ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/onosproject/helmit"},"helmit"),"."),(0,a.kt)("hr",null),(0,a.kt)("h2",null,"Developing xApp"),(0,a.kt)("p",null,"Challenge"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Intercept reverse port-forward component from cluster to local communication"),(0,a.kt)("li",{parentName:"ul"},"No many resource of tutorial")),(0,a.kt)("hr",null),(0,a.kt)("h1",null,"Thank You"))}k.isMDXComponent=!0},3677:(n,e,t)=>{"use strict";t.r(e)},3447:(n,e,t)=>{var l={"./01-slide.md":3623};function a(n){var e=o(n);return t(e)}function o(n){if(!t.o(l,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return l[n]}a.keys=function(){return Object.keys(l)},a.resolve=o,n.exports=a,a.id=3447},1177:(n,e,t)=>{"use strict";n.exports=t.p+"e802bf65fa09603bcfee.svg"},9508:(n,e,t)=>{"use strict";n.exports=t.p+"dbecc131f4793e0f0691.webp"},5446:(n,e,t)=>{"use strict";n.exports=t.p+"41d62fd619b30bcce36d.webp"},7931:(n,e,t)=>{"use strict";n.exports=t.p+"99931efff765ecf9cd6d.webp"},1447:(n,e,t)=>{"use strict";n.exports=t.p+"2642cdf7f98ed44cb536.webp"},4905:(n,e,t)=>{"use strict";n.exports=t.p+"a2aa3bd05cfa6f777e95.webp"}},n=>{n.O(0,[179],(()=>{n.E(921),n.E(880)}),5);var e=e=>n(n.s=e);n.O(0,[736],(()=>(e(7751),e(1720),e(9969))));n.O()}]);